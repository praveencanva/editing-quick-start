import { EditingExtensionClient, RemoteProcessInput, RemoteProcessOutput } from './canva_api';
import { CanvaImage, ImageId } from './canva_image';
import { Page } from './control_kit/control_kit';
import { PreviewOverlay } from './control_kit/preview_overlay';
import { ThumbnailId } from './control_kit/thumbnail_list';
/**
 * API client provided to devs for use in their app iframes
 * Reduces boilerplate when interacting with host iFrame
 */
export declare class CanvaApiClient implements EditingExtensionClient.API {
    private readonly comms;
    static initialize(handler: (client: CanvaApiClient) => Promise<void>): Promise<void>;
    /**
     * @internal
     */
    private static sendWakeUp;
    private exitingWithImage?;
    private remoteProcessCounter;
    private remoteProcessStateMachine?;
    /**
     * @internal
     */
    protected controlsEventHandler?: EditingExtensionClient.ControlsEventHandler;
    /**
     * @internal
     */
    protected presetsRequestHandler?: EditingExtensionClient.PresetsRequestHandler;
    /**
     * @internal
     */
    protected presetSelectedHandler?: EditingExtensionClient.PresetSelectedHandler;
    /**
     * @internal
     */
    protected imageUpdateHandler?: EditingExtensionClient.ImageUpdateHandler;
    /**
     * @internal
     */
    protected viewportResizeHandler?: EditingExtensionClient.ViewportResizeHandler;
    /**
     * @internal
     */
    protected saveRequestHandler?: EditingExtensionClient.SaveRequestHandler;
    /**
     * @internal
     */
    protected readyHandler?: EditingExtensionClient.ReadyHandler;
    /**
     * This function registers a callback that initializes an app.
     * @param handler Function that initializes an app. Both synchronous and asynchronous functions are supported.
     * @alpha
     */
    onReady(handler: EditingExtensionClient.ReadyHandler): void;
    /**
     * @alpha
     */
    onControlsEvent(handler: EditingExtensionClient.ControlsEventHandler): void;
    /**
     * @alpha
     */
    onPresetsRequest(handler: EditingExtensionClient.PresetsRequestHandler): void;
    /**
     * @alpha
     */
    onPresetSelected(handler: EditingExtensionClient.PresetSelectedHandler): void;
    /**
     * @alpha
     */
    onSaveRequest(handler: EditingExtensionClient.SaveRequestHandler): void;
    /**
     * @alpha
     */
    onImageUpdate(handler: EditingExtensionClient.ImageUpdateHandler): void;
    /**
     * @alpha
     */
    onViewportResize(handler: EditingExtensionClient.ViewportResizeHandler): void;
    private constructor();
    private onReceiveMessage;
    private handleInitRequest;
    overrideThumbnail(thumbnailId: ThumbnailId, thumbnail: CanvaImage): void;
    updateControlPanel(controls?: Page.Config, overlay?: PreviewOverlay.Config): void;
    private handleControlsEvent;
    private handleImageUpdate;
    private handleViewportResize;
    private handleSaveRequest;
    private handlePresetsRequest;
    private handlePresetSelected;
    /**
     * @internal Remote processes aren't yet supported by third-party apps
     */
    remoteProcess(input: RemoteProcessInput, progressHandler?: EditingExtensionClient.RemoteProcessProgressHandler, idHandler?: EditingExtensionClient.RemoteProcessIdHandler): Promise<RemoteProcessOutput>;
    /**
     * @alpha
     */
    exit(image: ImageId | CanvaImage): void;
}
