"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var base_1 = require("./base");
exports.ControlName = base_1.ControlName;
var slider_1 = require("./slider");
exports.Slider = slider_1.Slider;
var button_1 = require("./button");
exports.Button = button_1.Button;
var group_1 = require("./group");
exports.Group = group_1.Group;
var select_1 = require("./select");
exports.Select = select_1.Select;
var radio_group_1 = require("./radio-group");
exports.RadioGroup = radio_group_1.RadioGroup;
var text_input_1 = require("./text_input");
exports.TextInput = text_input_1.TextInput;
var checkbox_1 = require("./checkbox");
exports.Checkbox = checkbox_1.Checkbox;
var paragraph_1 = require("./paragraph");
exports.Paragraph = paragraph_1.Paragraph;
// TODO move these to their own .ts file
var ColorPicker;
(function (ColorPicker) {
    ColorPicker.create = (props) => (Object.assign({ type: "color_picker" /* COLOR_PICKER */ }, props));
})(ColorPicker = exports.ColorPicker || (exports.ColorPicker = {}));
var Page;
(function (Page) {
    /**
     * @param controls List of controls to show in the page
     * @param subpage (Optional) Whether the app receives the back button event
     * @param title (Optional) i18n'd title shown in subpage header
     * @param action (Optional) i18n'd action shown in subpage header
     */
    Page.create = ({ subpage, title, actionLabel, controls, }) => {
        return subpage
            ? {
                type: "control_panel" /* PAGE */,
                id: 'control_panel',
                subpage: true,
                title,
                actionLabel,
                controls,
            }
            : {
                type: "control_panel" /* PAGE */,
                id: 'control_panel',
                subpage: false,
                controls,
            };
    };
})(Page = exports.Page || (exports.Page = {}));
